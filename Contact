import java.io.*;
import java.math.*;
import java.text.*;
import java.util.*;
import java.util.regex.*;

public class Solution {
    public static void main(String args []){
Scanner kb=new Scanner(System.in);
int n = kb.nextInt();
Trie trie = new Trie();
for(int i = 0;i<n;i++)
{
    //kb.next();
    String choice = kb.next();
    String val = kb.next();
    if(choice.equals("add"))
    {
       trie.add(val);
    }
    else if(choice.equals("find"))
    {
        System.out.println(trie.find(val));
    }
}
    }
}
class TrieNode{
    HashMap<Character,TrieNode> map=new HashMap<>();
    int size = 0;
}
class Trie{
    TrieNode root = new TrieNode();
    public void add(String word)
    {
    TrieNode current = root;
        for (int i = 0; i < word.length(); i++) {
            char ch = word.charAt(i);
            TrieNode node = current.map.get(ch);
            if (node == null) {
                node = new TrieNode();
                current.map.put(ch, node);
            }
            current = node;
            current.size++;
        }
    }
    public int find(String word)
    {
        TrieNode current = root;
        for (int i = 0; i < word.length(); i++) {
            char ch = word.charAt(i);
            current = current.map.get(ch);
            if (current == null) {
                return 0;
            }
        }
        return current.size;
    }
}
